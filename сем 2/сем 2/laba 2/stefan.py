# Функция реализует метод Стефансона уточнения корней
def Stef(xn, xn1, eps, N_max, f):
    # количество итераций
    n = 0
    # достигнут ди N_max при недостаточной точности
    flag = False
    # пока разность между границами больше точности цикл продолжается
    while abs(xn1 - xn) > eps:
        # количество достигло максимального -> цикл прерывается
        if n == N_max:
            flag = True
            break
        # Подстраховка от деления на нуль
        if f(xn) == 0:
            xn1 = xn
            break
        if f(xn + f(xn)) == 0 and (f(xn) < f(xn + f(xn)) <= f(xn1) or f(xn) > f(xn + f(xn)) >= f(xn1)):
            xn1 = xn + f(xn)
            break
        # вычисление новых границ
        xn1, xn = xn - f(xn) / (f(xn + f(xn)) - f(xn)) * f(xn), xn1
        # увеличение счётчика количества итераций
        n += 1
    # функция возвращает корень, количество итераций и flag
    return xn1, n, flag

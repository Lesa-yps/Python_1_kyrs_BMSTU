# Талышева ИУ7 - 15Б
# по вводимым начальному значению, конечному значению и шагу
# программа выводит график функции y = cos(x - 1)

# Импортируем библиотеку math
import math as m
# Вводим эпсилон
eps = 0.00000000001
# Вводим начальное значение, конечное значение и шаг
xs, xf, step = map(float, input('Введите начальное значение, конечное значение и шаг через пробел: ').split())

# "Проверка на дурака"
while xs > xf and step > 0 or xs < xf and step < 0 or step == 0:
    print ('Недопустимый ввод. Повторите попытку.')
    xs, xf, step = map(float, input('Введите начальное значение, конечное значение и шаг через пробел: ').split())

# Обозначаем х, равный начальному, максимальный y и минимальный y
x = xs
y_max = y_min = m.cos(m.radians(x - 1))

# Вычисляем максимальный и минимальный у на взятом промежутке
while (x < xf and step > 0) or (x > xf and step < 0) or (abs(xf - x)) < eps:
    y = m.cos(m.radians(x - 1))
    if y > y_max:
        y_max = y
    if y_min > y:
        y_min = y
    x += step

# Вычисляем "вес" одной ячейки
ed = abs(y_max - y_min) / (100 - 1)
# Вычисляем расстояние, на котором располагается 0
len0 = int(abs(- y_min) / ed)
print (' ' * 8, f'{y_min:10.5}', ' ' * 85, f'{y_max:10.5}')
# Обозначаем х, равный начальному
x = xs
# Цикл выполняется пока х не "перейдёт" через х финальный
while (x <= xf and step > 0) or (x >= xf and step < 0) or (abs(xf - x)) < eps:
    # Вычисляем у для текущего х
    y = m.cos(m.radians(x - 1))
    # Вычисляем расстояние, на котором располагается y
    leny = int(abs(y - y_min) / ed)
    # Если 0 не входит в промежуток печатаем строку только с *
    if not(y_min < 0 < y_max):
        print (f'{x:10.5}', ' | ', ' ' * leny, '*', sep = '')
    # Если 0 входит в промежуток печатаем строку с * и с |, кроме того случая, когда у = 0
    # Тогда печатаем строку только с *
    else:
        if len0 < leny:
            print (f'{x:10.5}', ' | ', ' ' * (len0), '|', ' ' * (leny - len0 - 1), '*',sep = '')
        elif len0 == leny:
            print (f'{x:10.5}', ' | ', ' ' * leny, '*', sep = '')
        else:
            print (f'{x:10.5}', ' | ', ' ' * leny, '*', ' ' * (len0 - leny - 1), '|',sep = '')
    # Увеличиваем х на шаг
    x += step
    # "Стираем" погрешность, если x очень близок к 0
    if -1 * eps < x < eps: x = 0.0

# Талышева ИУ7-15Б
# Программа считает в каждой строке матрицы D количество элементов, превышающих
# суммы элементов соответствующих строк матрицы Z, размещает эти
# количества в массиве G, умножает матрицу D на максимальный элемент
# массива G. Печатает матрицу Z, матрицу D до и после преобразования, а также массив G.

# Ввод матриц
n = int(input('Введите количество строк матрицы D: '))
d = []
for i in range(n):
    d.append(list(map(float, input('Введите элементы строки матрицы D через пробел: ').split())))
m = int(input('Введите количество строк матрицы Z: '))
while m != n:
    print('Количество строк матриц D и Z должно совпадать. Повторите попытку.')
    m = int(input('Введите количество строк матрицы Z: '))
z = []
for i in range(m):
    z.append(list(map(float, input('Введите элементы строки матрицы Z через пробел: ').split())))

# Вывод исходной матрицы D и матрицы Z
print('Исходная матрица D: ')
for i in range(n):
    print('   ', end = '')
    for j in range(len(d[i])):
        print(f'{d[i][j]:<5.2f}', end = (' ' * (9 - len(f'{d[i][j]:<5.2f}'))))
    print()
print('Матрица Z: ')
for i in range(m):
    print('   ', end = '')
    for j in range(len(z[i])):
        print(f'{z[i][j]:<5.2f}', end = (' ' * (9 - len(f'{z[i][j]:<5.2f}'))))
    print()
# Создание массива G
g = [0] * n
# Проходимся по матрице D и заполняем массив G количеством чисел
# в строке матрицы D больших суммы чисел в соответствующей строке матрицы Z
for i in range(len(d)):
    g[i] = len([j for j in d[i] if j > sum(z[i])])
# Проходимся по матрице D и умножаем её элементы на максимальный элемент массива G
for i in range(len(d)):
    for j in range(len(d[i])):
        d[i][j] *= max(g)
# Вывод массива G
print('Массив G: ')
print('   ', *g)
# Вывод преобразованной матрицы D
print('Преобразованная матрица D: ')
for i in range(n):
    print('   ', end = '')
    for j in range(len(d[i])):
        print(f'{d[i][j]:<5.2f}', end = (' ' * (9 - len(f'{d[i][j]:<5.2f}'))))
    print()
